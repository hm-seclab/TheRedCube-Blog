import{_ as t}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as r,b as a,o}from"./app-C96n2heI.js";const i={};function s(n,e){return o(),r("div",null,e[0]||(e[0]=[a(`<h1 id="frontiermarketplace-writeup" tabindex="-1"><a class="header-anchor" href="#frontiermarketplace-writeup"><span>FrontierMarketplace - Writeup</span></a></h1><h2 id="description" tabindex="-1"><a class="header-anchor" href="#description"><span>Description</span></a></h2><p><strong>Files Provided:</strong></p><ul><li>Setup.sol — Setup smart contract</li><li>FrontierMarketplace.sol — Smart contract of marketplace for NFTs</li><li>FrontierNFT.sol - Smart contract for NFT handling</li></ul><p><strong>Goal:</strong><br> Get yourself more NFTs/Balance than you should actually have.</p><hr><h2 id="approach-strategy" tabindex="-1"><a class="header-anchor" href="#approach-strategy"><span>Approach &amp; Strategy</span></a></h2><h3 id="analysis" tabindex="-1"><a class="header-anchor" href="#analysis"><span>Analysis</span></a></h3><ul><li><strong>Tools Used:</strong> VS Code, <a href="https://remix.ethereum.org" target="_blank" rel="noopener noreferrer">Remix IDE</a></li><li><strong>Initial Thoughts/Plan:</strong><ul><li>First I skimmed the code of the three smart contract files and tried to understand the logic and interaction behind buying and refunding NFT tokens via FrontierMarketplace.sol and FrontierNFT.sol.</li><li>I developed a custom python program which uses the web3 library to interact with the Ethereum based blockchain and smart contracts.</li><li>Then I checked the blockchain via the given player account for any transactions, which led to nothing than the genesis block and no transactions.</li><li>I analyzed the smart contracts even further with special regards to the requirements. What was kind of suspicious are the three different approval cases in the public <code>transferFrom(address from, address to, uint256 tokenId)</code> function in FrontierNFT.sol which checks if one could transfer a NFT token of tokenId from A to B. This function was used by <code>refundNFT(uint256 tokenId)</code> in FrontierMarketplace.sol.<div class="language-solidity line-numbers-mode" data-highlighter="shiki" data-ext="solidity" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-solidity"><span class="line"><span style="--shiki-light:#A626A4;--shiki-dark:#C678DD;">require</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">     msg.sender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == from || </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">isApprovedForAll</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(from, </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg.sender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">) || </span><span style="--shiki-light:#E45649;--shiki-dark:#E5C07B;">msg.sender</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> == </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">getApproved</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">(tokenId),</span></span>
<span class="line"><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">        &quot;FrontierNFT: transfer caller is not owner nor approved&quot;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    );</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>Here you can see three different cases if someone (<code>msg.sender</code>) gets their transfer of existing NFT tokens approved: <ol><li>When they are the holder (<code>msg.sender == from</code>)</li><li>When they have been previously approved for this transfer (look at <code>setApprovalForAll(address operator, bool approved)</code>, <code>isApprovedForAll(address owner, address operator)</code> for deeper understanding)</li><li>When they are able to get approvement because they are the holder of the token (<code>msg.sender == getApproved(uint256 tokenId)</code>)</li></ol></li><li>The last case has a logic mistake in it which can be exploited.</li><li>Each account started with 20 ETH (<code>PLAYER_STARTING_BALANCE = 20 ether</code>) while one NFT token always costs 10 ETH (<code>NFT_VALUE = 10 ether</code>). So someone could only buy one NFT token (Because of Gas fees a transactions needs to be broadcasted, someone would always have slightly less than 10 ether to buy another one.).</li><li>However being an owner of one NFT token makes you eligible to run <code>approve(address to, uint256 tokenId)</code> which approves a transfer which can later be used by the third case of the <code>transferFrom()</code> function to transfer this NFT token.</li></ul></li></ul><hr><h2 id="exploitation-process" tabindex="-1"><a class="header-anchor" href="#exploitation-process"><span>Exploitation Process</span></a></h2><ul><li>With these information I set up a plan: <ol><li>Buy one NFT token of tokenId</li><li>Approve to transfer this NTF token of tokenId to yourself (which itself would only result in a self transfer)</li><li>Refund this NFT token of tokenId (which equals a transfer from yourself to the marketplace)</li><li>Run the <code>transferFrom(address from, address to, uint256 tokenId)</code> which utilises the prior approval to transfer from the marketplace to yourself with the same NFT token of tokenId</li><li>Now you have one NFT token with the same balance from the beginning (minus the transactions gas fees), so it seems like you got it for free</li></ol></li></ul>`,12)]))}const p=t(i,[["render",s]]),h=JSON.parse('{"path":"/posts/UniCTF-24/FrontierMarketplace.html","title":"FrontierMarketplace - Writeup","lang":"en-US","frontmatter":{"date":"2024-12-14T00:00:00.000Z","author":"charlie74 (Constantin)","article":false,"timeline":false,"description":"FrontierMarketplace - Writeup Description Files Provided: Setup.sol — Setup smart contract FrontierMarketplace.sol — Smart contract of marketplace for NFTs FrontierNFT.sol - Sma...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"FrontierMarketplace - Writeup\\",\\"description\\":\\"FrontierMarketplace - Writeup Description Files Provided: Setup.sol — Setup smart contract FrontierMarketplace.sol — Smart contract of marketplace for NFTs FrontierNFT.sol - Sma...\\"}"],["meta",{"property":"og:url","content":"https://hm-seclab.github.io/TheRedCube-Blog/posts/UniCTF-24/FrontierMarketplace.html"}],["meta",{"property":"og:site_name","content":"TheRedCube"}],["meta",{"property":"og:title","content":"FrontierMarketplace - Writeup"}],["meta",{"property":"og:description","content":"FrontierMarketplace - Writeup Description Files Provided: Setup.sol — Setup smart contract FrontierMarketplace.sol — Smart contract of marketplace for NFTs FrontierNFT.sol - Sma..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-12-17T13:15:31.000Z"}],["meta",{"property":"article:author","content":"charlie74 (Constantin)"}],["meta",{"property":"article:published_time","content":"2024-12-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-12-17T13:15:31.000Z"}]]},"git":{"createdTime":1734441331000,"updatedTime":1734441331000,"contributors":[{"name":"sleepycat666","username":"sleepycat666","email":"90268006+sleepycat666@users.noreply.github.com","commits":1,"url":"https://github.com/sleepycat666"}]},"readingTime":{"minutes":1.66,"words":497},"filePathRelative":"posts/UniCTF-24/FrontierMarketplace.md","excerpt":"\\n<h2>Description</h2>\\n<p><strong>Files Provided:</strong></p>\\n<ul>\\n<li>Setup.sol — Setup smart contract</li>\\n<li>FrontierMarketplace.sol — Smart contract of marketplace for NFTs</li>\\n<li>FrontierNFT.sol - Smart contract for NFT handling</li>\\n</ul>\\n<p><strong>Goal:</strong><br>\\nGet yourself more NFTs/Balance than you should actually have.</p>","autoDesc":true}');export{p as comp,h as data};
